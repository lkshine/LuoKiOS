////  AlertViewController.m//  iOS知识点总结项目 ---- AlertViewController的使用////  Created by lkshine on 16/5/13.//  Copyright © 2016年 lkshine. All rights reserved.//#import "AlertViewController.h"#import <objc/runtime.h>@interface AlertViewController ()@property (weak, nonatomic) IBOutlet UILabel * timeLabel;@property (nonatomic, strong) UIView         * customCover;         // 自定义蒙版@property (weak, nonatomic) IBOutlet UIButton *aletBtn;@property (weak, nonatomic) IBOutlet UIButton *coverShadowBtn;@end/*   由于AlertViewController是在iOS8之后才出来的，那么为了适配iOS6、7的话，该肿么办呢，http://www.jianshu.com/p/70b1222715b3 给出了介绍 */@implementation AlertViewController- (UIView *)customCover {        if (!_customCover) {                _customCover = [[UIView alloc]initWithFrame:CGRectMake(0, hSrceem, wSrceem, hSrceem)];        //        _customCover.backgroundColor = [UIColor purpleColor];//        _customCover.alpha = 0.5;                UIView * bgcover = [[UIView alloc] initWithFrame:CGRectMake(0, 0, wSrceem, hSrceem)];        [_customCover addSubview:bgcover];        bgcover.backgroundColor = [UIColor purpleColor];        bgcover.alpha = 0.2;                //AeroGlass毛玻璃特效        UIBlurEffect *blur = [UIBlurEffect effectWithStyle:UIBlurEffectStyleLight];        UIVisualEffectView *effectview = [[UIVisualEffectView alloc] initWithEffect:blur];        effectview.alpha = 0.5;        effectview.frame = _customCover.bounds;        [_customCover addSubview:effectview];//注意，不应该直接添加子视图到UIVisualEffectView视图中，而是应该添加到UIVisualEffectView对象的contentView中。                        UIButton * btn = [UIButton buttonWithType:UIButtonTypeContactAdd];        btn.frame = CGRectMake(100, 100, 100, 100);        [_customCover addSubview:btn];        [btn addTarget:self action:@selector(hiddenCustomView) forControlEvents:UIControlEventTouchDown];                [[UIApplication sharedApplication].keyWindow addSubview:_customCover];    }        return _customCover;}#pragma mark -- 设置毛玻璃特效- (void)hiddenCustomView {        [UIView animateWithDuration:0.25 animations:^{        self.customCover.frame = CGRectMake(0, hSrceem, wSrceem, hSrceem);    } completion:^(BOOL finished) {        self.customCover.hidden = YES;    }];}// 需要注意的是，这里特地举例2个按钮召唤出蒙层，一个coverShowBtn，一个alert的取消按钮，在block里调用的话没法model形式唤出，但是回去的时候还是model形态- (void)showCustomView {        self.customCover.hidden = NO;    [UIView animateWithDuration:0.25 animations:^{        self.customCover.frame = CGRectMake(0, 0, wSrceem, hSrceem);    }];    }//AFNetworking 返回错误unsupported media type (415) 解决方案 ,http://blog.csdn.net/whoten/article/details/21537211- (void)viewDidLoad {        [super viewDidLoad];    //设置按钮被点中的高亮光晕效果    [self.aletBtn setShowsTouchWhenHighlighted:YES];    [self.coverShadowBtn setShowsTouchWhenHighlighted:YES];//    [self checkKeyOfClass];}#pragma mark -- 检查某个类里的隐藏属性（类私有属性）- (void)checkKeyOfClass {        int i;    int propertyCount = 0;    objc_property_t *propertyList = class_copyPropertyList([UIAlertAction class], (unsigned int *)&propertyCount);        for ( i=0; i < propertyCount; i++ ) {        objc_property_t *thisProperty = propertyList + i;        const char* propertyName = property_getName(*thisProperty);        NSLog(@"Person has a property: '%s'", propertyName);    }}/* for in */#pragma mark -- 检查某个类里的控件- (void)checkKindOfClass {        for (id subViwe in self.view.subviews) {              if ([subViwe isKindOfClass:[UIButton class]]) {                     UIButton *button = (UIButton*)subViwe;                        [button setTitleColor:[UIColor colorWithRed:0 green:0.478431 blue:1 alpha:1] forState:UIControlStateNormal];                   }            }    }- (IBAction)showAlert:(UIButton *)sender {      UIAlertController * alert = [UIAlertController alertControllerWithTitle:@"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"//@"提示"                                                                   message:nil //@"是否要重新开始？"                                                            preferredStyle:UIAlertControllerStyleAlert];//通过该枚举类型，选择展示样式            // 将title设置为@"\n\n"后，可以扩大title的显示区域，并且将message设置为nil（不至空也行），通过alert.view addSubview方法，可以添加自定义视图    NSLog(@" alert.rect = %@", NSStringFromCGRect(alert.view.bounds));    UIView * detailView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 200, 100)];    detailView.backgroundColor = [UIColor redColor];    [alert.view addSubview:detailView];        UIAlertAction * defaultAction = [UIAlertAction actionWithTitle:@"是" style:UIAlertActionStyleDestructive                                                          handler:^(UIAlertAction * action) {                                                              self.timeLabel.text = @"5";                                                          }];    UIAlertAction * Action1 = [UIAlertAction actionWithTitle:@"取消"                                                      style:UIAlertActionStyleCancel                                                    handler:^(UIAlertAction *action) {                                                        [self showCustomView];                                                    }];        [alert addAction:defaultAction];    [alert addAction:Action1];    [self presentViewController:alert animated:YES completion:nil]; //作用等同下面语句       /*     改变系统的颜色，看上去可以改变button的颜色，但是是全部都改了哦，如果需要定制改哪个的话 第一种方法是UIAlertActionStyleDestructive的枚举值，第二种就是用kvc来改，结果发现，没有办法做到，因为就算是私有api通过kvc，也没有对应键值来修改，所以非要自定义button的颜色话，还得用alertview了          *///      [UIView appearance].tintColor = [UIColor cyanColor];  //全局改颜色                /*    UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:@"Dont care what goes here, since we're about to change below" message:@"" preferredStyle:UIAlertControllerStyleActionSheet];    NSMutableAttributedString *hogan = [[NSMutableAttributedString alloc] initWithString:@"Presenting the great... Hulk Hogan!"];    [hogan addAttribute:NSFontAttributeName                  value:[UIFont systemFontOfSize:10.0]                  range:NSMakeRange(0, 3)];    [hogan addAttribute:NSForegroundColorAttributeName                  value:[UIColor redColor]                  range:NSMakeRange(0, 3)];    [alertVC setValue:hogan forKey:@"attributedTitle"];                UIAlertAction *button = [UIAlertAction actionWithTitle:@"Label text"                                                     style:UIAlertActionStyleDefault                                                   handler:^(UIAlertAction *action){                                                       //add code to make something happen once tapped                                                   }];    UIImage *accessoryImage = [UIImage imageNamed:@"greenChat"];//    [button setValue:accessoryImage forKey:@"image"];    [button setValue:@"lkj" forKey:@"title"];            [alertVC addAction:button];        UIViewController *rootViewController = [UIApplication sharedApplication].keyWindow.rootViewController;    [rootViewController presentViewController:alertVC animated:YES completion:nil];     */}- (IBAction)coverShowBtnAction:(UIButton *)sender {        [self showCustomView];}- (void)didReceiveMemoryWarning {    [super didReceiveMemoryWarning];}@end